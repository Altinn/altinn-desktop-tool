<UserControl x:Class="AltinnDesktopTool.View.SearchResultView"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:view="clr-namespace:AltinnDesktopTool.View"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="600"
             DataContext="{Binding SearchResultViewModel, Source={StaticResource ViewModelLocator}}">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="80"/>
        </Grid.RowDefinitions>

        <DataGrid x:Name="OrganizationGrid" IsReadOnly="True" ItemsSource="{Binding Model.ResultCollection}" Margin="10,10,10,20" GridLinesVisibility="All" AlternationCount="2" AutoGenerateColumns="False" BorderThickness="0" SelectionMode="Single" SelectionUnit="FullRow">
            <DataGrid.Columns>

                <DataGridTextColumn Header="{x:Static view:Resources.OrganizationGridColumnName}" Binding="{Binding Name}" Width="*"/>
                <DataGridTextColumn Header="{x:Static view:Resources.OrganizationGridColumnOrganizationNumber}" Binding="{Binding OrganizationNumber}" Width="200"/>
                <DataGridTextColumn Header="{x:Static view:Resources.OrganizationGridColumnType}" Binding="{Binding Type}" Width="60"/>

                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.Header>
                        <CheckBox IsChecked="{Binding DataContext.Model.SelectAllChecked, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}" ToolTip="{x:Static view:Resources.SelectAll}"  />
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox PreviewMouseDown="UIElement_OnPreviewMouseDown" HorizontalAlignment="Center" 
                                      IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      Command="{Binding DataContext.ItemChecked,RelativeSource={RelativeSource Mode=Self}}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
            <DataGrid.RowStyle>
                <Style BasedOn="{StaticResource MetroDataGridRow}" TargetType="{x:Type DataGridRow}">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentBaseColorBrush}"></Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Style>
                <Style BasedOn="{StaticResource MetroDataGrid}" TargetType="{x:Type DataGrid}">
                    <Setter Property="AlternatingRowBackground"
                    Value="{DynamicResource GrayBrush10}" />
                </Style>
            </DataGrid.Style>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding GetContactsCommand}" 
                        CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <Border BorderThickness="1" Padding="10">
                        <StackPanel Orientation="Vertical">
                            <TextBlock Text="{x:Static view:Resources.PersonalContactsTitle}"/>
                            <DataGrid x:Name="PersonalContactsGrid" ItemsSource="{Binding PersonalContactsCollection}" GridLinesVisibility="All" IsReadOnly="True" SelectionUnit="FullRow" AutoGenerateColumns="False">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="{x:Static view:Resources.PersonalContactsGridColumnName}" Binding="{Binding Name}"/>
                                    <DataGridTextColumn Header="{x:Static view:Resources.PersonalContactsGridColumnSsn}" Binding="{Binding SocialSecurityNumber}"/>
                                    <DataGridTextColumn Header="{x:Static view:Resources.PersonalContactsGridColumnMobile}" Binding="{Binding MobileNumber}"/>
                                    <DataGridTextColumn Header="{x:Static view:Resources.PersonalContactsGridColumnEmail}" Binding="{Binding EmailAddress}"/>
                                </DataGrid.Columns>
                            </DataGrid>
                            <TextBlock Text="{x:Static view:Resources.OfficialContactsTitle}"/>
                            <DataGrid x:Name="OfficialContactsGrid" ItemsSource="{Binding OfficalContactsCollection}" GridLinesVisibility="All" IsReadOnly="True" SelectionUnit="FullRow" AutoGenerateColumns="False">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="{x:Static view:Resources.OfficialContactsGridColumnEmail}" Binding="{Binding EmailAddress}"/>
                                    <DataGridTextColumn Header="{x:Static view:Resources.OfficialContactsGridColumnMobile}" Binding="{Binding MobileNumber}"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </StackPanel>
                    </Border>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>
        </DataGrid>
        <TextBlock Grid.Row="0"  FontWeight="Bold" HorizontalAlignment="Center"  VerticalAlignment="Center" Text="{Binding Model.InfoText}" Visibility="{Binding Path=Model.EmptyMessageVisibility, Converter={StaticResource BoolToVisability}}"/>
        <controls:ProgressRing IsActive="{Binding Model.IsBusy}" />
        <Border Grid.Row="1" Margin="0,0,0,0" Background="{DynamicResource AccentColorBrush2}" />
        <Button Grid.Row="1" Command="{Binding CopyToClipboardExcelFormatCommand}" ToolTip="{x:Static view:Resources.CopyToExcelTooltip}" Width="50" Height="50" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,40,0" Style="{DynamicResource AccentedSquareButtonStyle}">
            <StackPanel Orientation="Horizontal">
                <Rectangle x:Name="rectButtonCopyExcel" Width="40" Height="40" 
               Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill"
                     Visual="{DynamicResource appbar_page_excel}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </StackPanel>
        </Button>
        <Button Grid.Row="1" Command="{Binding CopyToClipboardPlainTextCommand}" ToolTip="{x:Static view:Resources.CopyPlainTextTooltip}" Width="50" Height="50" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,110,0" Style="{DynamicResource AccentedSquareButtonStyle}">
            <StackPanel Orientation="Horizontal">
                <Rectangle x:Name="rectButtonCopy" Width="40" Height="40" 
               Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill"
                     Visual="{DynamicResource appbar_clipboard_paste}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </StackPanel>
        </Button>
    </Grid>
</UserControl>































